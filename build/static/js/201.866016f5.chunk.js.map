{"version":3,"file":"static/js/201.866016f5.chunk.js","mappings":"0JAsGA,UA/EgB,WAEd,IAAAA,EAAwBC,EAAAA,SAAe,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA4BL,EAAAA,SAAe,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAA8BT,EAAAA,SAAe,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAwBb,EAAAA,SAAe,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA7BE,GAAFD,EAAA,GAASA,EAAA,IAoCpB,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uFAAuFC,GAAG,UAASC,SAAA,EAGhHC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,mDAAkDE,UAC7DC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,gEAA+DE,SAAC,kBAMlFH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCE,SAAA,EAEpDC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAwBE,UACrCC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOJ,UAAU,0KAA0Kd,KAAK,OAAOe,GAAG,UAAUI,YAAY,OAAOC,SAAU,SAACC,GAAC,OAAKpB,EAAQoB,EAAEC,OAAOC,MAAM,OAG7RN,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAwBE,UACrCC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,SAASJ,UAAU,yKAAyKd,KAAK,SAASe,GAAG,YAAYI,YAAY,iBAAiBC,SAAU,SAACC,GAAC,OAAKhB,EAAUgB,EAAEC,OAAOC,MAAM,OAG9SN,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAwBE,UACrCC,EAAAA,EAAAA,KAAA,YAAUH,UAAU,sLAAsLd,KAAK,UAAUe,GAAG,aAAaS,KAAK,KAAKC,KAAK,IAAIN,YAAY,UAAUC,SAAU,SAACC,GAAC,OAAKZ,EAAWY,EAAEC,OAAOC,MAAM,OAG/TN,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAwBE,UACrCC,EAAAA,EAAAA,KAAA,YAAUH,UAAU,sLAAsLd,KAAK,OAAOe,GAAG,UAAUS,KAAK,KAAKC,KAAK,IAAIN,YAAY,OAAOC,SAAU,SAACC,GAAC,OAAKT,EAAQS,EAAEC,OAAOC,MAAM,OAGnTN,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iCAAgCE,UAC7CC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,oEAAoEI,KAAK,SAASH,GAAG,YAAYW,QAAS,WA7DrH,KAAT1B,GAAwB,SAATA,GAA4B,cAATA,GAAiC,OAATA,QAA0B2B,IAAT3B,EAC7E4B,IAAAA,KAAU,CAAEC,MAAO,QAASC,KAAM,oGAAqGC,KAAM,UAIhI,KAAX3B,GAA4B,SAAXA,GAAgC,cAAXA,GAAqC,OAAXA,QAA8BuB,IAAXvB,EACrFwB,IAAAA,KAAU,CAAEC,MAAO,QAASC,KAAM,8GAA+GC,KAAM,UAInI,KAAlB3B,EAAO4B,OACTJ,IAAAA,KAAU,CAAEC,MAAO,QAASC,KAAM,sJAAuJC,KAAM,WAIjL,KAAZvB,GAA8B,SAAZA,GAAkC,cAAZA,GAAuC,OAAZA,QAAgCmB,IAAZnB,IACzFoB,IAAAA,KAAU,CAAEC,MAAO,QAASC,KAAM,uGAAwGC,KAAM,SA6CM,EAAEf,SAAC,kBAM/J,C","sources":["components/Contact.js"],"sourcesContent":["import React from 'react'\r\nimport Swal from 'sweetalert2'\r\n// import { MongoClient, ServerApiVersion } from 'mongodb'\r\n// const uri = 'mongodb+srv://mojidrayagnik:zyqmQLFeUM4awllm@cluster0.sjjgovz.mongodb.net/PhcUserInfo?retryWrites=true&w=majority';\r\n\r\n// const client = new MongoClient(uri, {\r\n//   serverApi: {\r\n//     version: ServerApiVersion.v1,\r\n//     strict: true,\r\n//     deprecationErrors: true,\r\n//   }\r\n// });\r\n\r\n// client.connect().then((val) => {\r\n//   console.log(\"Connection Success\", val);\r\n// }).catch((e) => {\r\n//   console.log(\"Connection error\", e);\r\n// })\r\n\r\n// console.log(\"MongoClient\",MongoClient,ServerApiVersion);\r\n\r\n\r\n\r\nconst Contact = () => {\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [number, setNumber] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [note, setNote] = React.useState(\"\");\r\n\r\n\r\n  const submitData = () => {\r\n\r\n    if (name === \"\" || name === \"null\" || name === \"undefined\" || name === null || name === undefined) {\r\n      Swal.fire({ title: 'Oops!', html: '<b class=\"font-[cursive]\" style=\"color:red;font-size:30px;font-weight:500;\">Name is Required.</b>', icon: 'error' });\r\n      return false;\r\n    }\r\n\r\n    if (number === \"\" || number === \"null\" || number === \"undefined\" || number === null || number === undefined) {\r\n      Swal.fire({ title: 'Oops!', html: '<b class=\"font-[cursive]\" style=\"color:red;font-size:30px;font-weight:500;\">Contact Number is Required.</b>', icon: 'error' });\r\n      return false;\r\n    }\r\n\r\n    if (number.length !== 10) {\r\n      Swal.fire({ title: 'Oops!', html: '<b class=\"font-[cursive]\" style=\"color:red;font-size:30px;font-weight:500;\">Contact Number Must Be <span style=\"color:black;\">10</span> Digits.</b>', icon: 'error' });\r\n      return false;\r\n    }\r\n\r\n    if (address === \"\" || address === \"null\" || address === \"undefined\" || address === null || address === undefined) {\r\n      Swal.fire({ title: 'Oops!', html: '<b class=\"font-[cursive]\" style=\"color:red;font-size:30px;font-weight:500;\">Address is Required.</b>', icon: 'error' });\r\n      return false;\r\n    }\r\n\r\n    // mongoose.connect(\"mongodb+srv://mojidrayagnik:zyqmQLFeUM4awllm@cluster0.sjjgovz.mongodb.net/PhcUserInfo?retryWrites=true&w=majority\")\r\n    //   .then((val) => {\r\n    //     console.log(\"connection Successfully...\", val);\r\n    //   })\r\n    //   .catch((e) => {\r\n    //     console.log(\"Connection Error\", e);\r\n    //   })\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='bg-[#f0f0f0] w-full py-[50px] mt-10 rounded-[100px] font-[cursive] sm:bg-[#d3e9e9a1]' id='contact'>\r\n\r\n      {/* name */}\r\n      <p className='font-bold text-[55px] text-center sm:text-[40px]'>\r\n        <span className='border-y-[10px] border-[grey] rounded-[30px] sm:border-[blue]'>\r\n          Contact Us\r\n        </span>\r\n      </p>\r\n\r\n      {/* fields */}\r\n      <div className=\"py-[40px] mt-[40px] px-4 text-center \">\r\n\r\n        <div className=\"p-5 text-center sm:p-2\">\r\n          <input type=\"text\" className=\"w-[550px]  h-[50px] border-[grey] border-[2px] rounded-[10px] placeholder:italic placeholder:text-[22px] placeholder:text-center placeholder:font-bold sm:w-[270px] sm:\" name='Name' id=\"txtName\" placeholder=\"Name\" onChange={(e) => setName(e.target.value)} />\r\n        </div>\r\n\r\n        <div className=\"p-5 text-center sm:p-2\">\r\n          <input type=\"number\" className=\"w-[550px] h-[50px] border-[grey] border-[2px] rounded-[10px] placeholder:italic placeholder:text-[22px] placeholder:text-center placeholder:font-bold sm:w-[270px] sm:\" name='Number' id=\"txtNumber\" placeholder=\"Contact Number\" onChange={(e) => setNumber(e.target.value)} />\r\n        </div>\r\n\r\n        <div className=\"p-5 text-center sm:p-2\">\r\n          <textarea className=\"w-[550px] h-[150px] sm:h-[95px] border-[grey] rounded-[10px] border-[2px] placeholder:italic placeholder:text-[22px] placeholder:text-center placeholder:font-bold sm:w-[270px] sm:\" name='Address' id=\"txtAddress\" cols=\"30\" rows=\"8\" placeholder=\"Address\" onChange={(e) => setAddress(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        <div className=\"p-5 text-center sm:p-2\">\r\n          <textarea className=\"w-[550px] h-[120px] sm:h-[95px] border-[grey] rounded-[10px] border-[2px] placeholder:italic placeholder:text-[22px] placeholder:text-center placeholder:font-bold sm:w-[270px] sm:\" name='Note' id=\"txtNote\" cols=\"30\" rows=\"8\" placeholder=\"Note\" onChange={(e) => setNote(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        <div className=\"p-5 text-center sm:p-2 sm:mt-5\">\r\n          <button className=\"bg-[red] text-[white] text-[25px] rounded-full p-[10px] w-[150px]\" type=\"button\" id=\"btnSubmit\" onClick={() => { submitData(); }}>Submit</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact;\r\n"],"names":["_React$useState","React","_React$useState2","_slicedToArray","name","setName","_React$useState3","_React$useState4","number","setNumber","_React$useState5","_React$useState6","address","setAddress","_React$useState7","_React$useState8","setNote","_jsxs","className","id","children","_jsx","type","placeholder","onChange","e","target","value","cols","rows","onClick","undefined","Swal","title","html","icon","length"],"sourceRoot":""}